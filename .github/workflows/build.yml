name: Build

on:
  pull_request:

env:
  RAPIDWRIGHT_VERSION: v2020.2.6-beta

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1.0.4
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8


      - name: Cache Jars & Data
        id: cache-rapidwright
        uses: actions/cache@v2
        with:
          path: |
              data
              jars
              bin
              build
          key: rapidwright-${{ env.RAPIDWRIGHT_VERSION }}
          restore-keys: |
            rapidwright-
      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            gradle-

      - name: Install RapidWright
        if: steps.cache-rapidwright.outputs.cache-hit != 'true'
        run: wget https://github.com/Xilinx/RapidWright/releases/download/${{ env.RAPIDWRIGHT_VERSION }}/rapidwright_jars.zip && unzip rapidwright_jars.zip && wget https://github.com/Xilinx/RapidWright/releases/download/${{ env.RAPIDWRIGHT_VERSION }}/rapidwright_data.zip && unzip rapidwright_data.zip

      - name: Compile & Test RapidWright
        run: ./gradlew build
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Archive Test Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-report
          path: build/reports/tests/test

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: |
            build/test-results/test/*.xml
